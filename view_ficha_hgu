CHEGADA_FW = 
var DataHoje = TODAY()
var DataInicioHomolog = MAX('Principal'[INICIO_HOMOLOG])
var AtrasoFW = MAX(Principal[ATRASO_FW])
var DataTerminoHomolog = MAX('Principal'[TERMINO_HOMOLOG])
var DataFW = MAX('Principal'[CHEGADA_FW])
var NovoFW = MAX('Principal'[NOVO_FW])

var RESULTADO = 
    SWITCH(TRUE(),
    ISBLANK(NovoFW), "-",
    AtrasoFW = 1 && ISBLANK(DataFW), "ASAP" & "  " & "ðŸŸ¡", //a chegada do FW estÃ¡ atrasada
        DataFW <= DataHoje && DataFW <> BLANK(), DataFW & "  " & "ðŸŸ¢", //JÃ¡ estamos com o FW
        ISBLANK(DataFw), "-", //NÃ£o chegou o FW ainda, por isso nÃ£o foi preenchido
        DataFW > DataHoje, DataFW & "  " & "âšª" //Data futura
    )
    return RESULTADO
    
-------------------------------------------------------------------------

INICIO HOMOLOG = 
var DataInicioHomolog = MAX('Principal'[INICIO_HOMOLOG])
var RESULTADO =
    SWITCH(TRUE(),
        ISBLANK(DataInicioHomolog), "-", //se nÃ£o for preenchido
        DataInicioHomolog //caso contrÃ¡rio, mostrar a data
    )
    return RESULTADO

-------------------------------------------------------------------------

TERMINO_HOMOLOG = 
var DataHoje = TODAY()
var AtrasoHomolog = MAX(Principal[ATRASO_HOMOLOG])
var DataInicioHomolog = MAX('Principal'[INICIO_HOMOLOG])
var DataTerminoHomolog = MAX('Principal'[TERMINO_HOMOLOG])
var AprovadoHomolog = MAX('Principal'[APROVADO_HOMOLOG])
var ValidacaoEx = MAX(Principal[VALIDACAO_EXECUTIVA_PILOTOS])
var COND_FW = [COND_FW]

var RESULTADO = 
    SWITCH(TRUE(),
    AtrasoHomolog = 1, DataTerminoHomolog & "  " & "ðŸŸ¡", // estÃ¡ em atraso
    (AprovadoHomolog = 1 && AprovadoHomolog <> BLANK()) || (ValidacaoEx = 0 && ValidacaoEx <> BLANK()), DataTerminoHomolog & "  " & "ðŸ”´", // reprovado
    DataInicioHomolog <= DataHoje && DataHoje < DataTerminoHomolog, DataTerminoHomolog & "  " & "ðŸ”µ", // homologaÃ§Ã£o estÃ¡ em andamento
    DataTerminoHomolog <= DataHoje && DataTerminoHomolog <> BLANK(), DataTerminoHomolog & "  " & "ðŸŸ¢", // homologaÃ§Ã£o concluÃ­da
    DataInicioHomolog > DataHoje, DataTerminoHomolog & "  " & "âšª",  // Ã© uma data futura
    ISBLANK(DataTerminoHomolog), "-" //se nÃ£o for preenchido
    )
    return RESULTADO

-------------------------------------------------------------------------

INICIO_FUT = 
var DataInicioFUT = MAX('Principal'[INICIO_FUT])
var RESULTADO =
    SWITCH(TRUE(),
        ISBLANK(DataInicioFUT), "-", //se nÃ£o for preenchido
        DataInicioFUT //caso contrÃ¡rio, mostrar a data
    )
    return RESULTADO

-------------------------------------------------------------------------

TERMINO_FUT = 
var DataHoje = TODAY()
var DataInicioFUT = MAX('Principal'[INICIO_FUT])
var DataTerminoFUT = MAX('Principal'[TERMINO_FUT])
var AtrasoFUT = MAX(Principal[ATRASO_FUT])
var AprovadoFUT = MAX(Principal[APROVADO_FUT])

var RESULTADO = 
    SWITCH(TRUE(),

    AtrasoFUT = 1, DataTerminoFUT & "  " & "ðŸŸ¡", //estÃ¡ em atraso
    AprovadoFUT = 0 && AprovadoFUT <> BLANK(), DataTerminoFUT & "  " & "ðŸ”´", //estÃ¡ reprovado
    DataInicioFUT <= DataHoje && DataHoje <= DataTerminoFUT, DataTerminoFUT & "  " & "ðŸ”µ", // homologaÃ§Ã£o estÃ¡ em andamento
    DataTerminoFUT < DataHoje && DataTerminoFUT <> BLANK(), DataTerminoFUT & "  " & "ðŸŸ¢", // FUT concluÃ­do
    DataInicioFUT > DataHoje, DataTerminoFUT & "  " & "âšª", // Ã© uma data futura

    ISBLANK(DataInicioFUT), "-" // se termino FUT nÃ£o for preenchido
    )
    return RESULTADO

INICIO_FOA = 
var DataInicioFOA = MAX('Principal'[INICIO_FOA])
var RESULTADO =
    SWITCH(TRUE(),
        ISBLANK(DataInicioFOA), "-", //se nÃ£o for preenchido
        DataInicioFOA //caso contrÃ¡rio, mostrar a data
    )
    return RESULTADO

-------------------------------------------------------------------------

TERMINO_FOA = 
var DataHoje = TODAY()
var DataInicioFOA = MAX('Principal'[INICIO_FOA])
var DataTerminoFOA = MAX('Principal'[TERMINO_FOA])
var AtrasoIFOA = MAX('Principal'[ATRASO_FOA])
var AprovadoFOA = MAX('Principal'[APROVADO_FOA])

var RESULTADO = 
    SWITCH(TRUE(),

    AtrasoIFOA = 1, DataTerminoFOA & "  " & "ðŸŸ¡", //estÃ¡ em atraso
    AprovadoFOA = 0 && AprovadoFOA <> BLANK(), DataTerminoFOA & "  " & "ðŸ”´", //FOA reprovado
    DataInicioFOA <= DataHoje && DataHoje <= DataTerminoFOA, DataTerminoFOA & "  " & "ðŸ”µ", // homologaÃ§Ã£o estÃ¡ em andamento
    DataTerminoFOA < DataHoje && DataTerminoFOA <> BLANK(), DataTerminoFOA & "  " & "ðŸŸ¢", // homologaÃ§Ã£o concluÃ­da
    DataInicioFOA > DataHoje, DataTerminoFOA & "  " & "âšª", // Ã© uma data futura

    ISBLANK(DataInicioFOA), "-" // se inicio FOA nÃ£o for preenchido ou for reprovado

    )
    return RESULTADO

-------------------------------------------------------------------------

CERTIFIC = 
var DataCertificado = MAX(Principal[CERTIFICADO_HOMOLOG])
var AprovadoCertificado = MAX('Principal'[APROVADO_CERTIFICADO])
var DataHoje = TODAY()

var RESULTADO = 
    SWITCH(TRUE(),

        AprovadoCertificado = 0 && AprovadoCertificado <> BLANK(), DataCertificado & "  " & "ðŸ”´", //certificado reprovado
        DataCertificado > DataHoje && DataCertificado <> BLANK(), DataCertificado & "  " & "âšª", // Ã© uma data futura
        DataCertificado < DataHoje && DataCertificado <> BLANK(), DataCertificado & "  " & "ðŸŸ¢", // certificado aprovado

        ISBLANK(DataCertificado), "-" //se certificado nÃ£o for preenchido
    )
    return RESULTADO

-------------------------------------------------------------------------

PREFERRED = 
var DataHoje = TODAY()
var DataPref = MAX(Principal[PREFERRED])
var DataFabrica = MAX('Principal'[FABRICA])
var AtrasoPREF = MAX(Principal[ATRASO_PREFERRED])
var COND_CERTIFICADO = [COND_CERTIFICADO]
var DataReversa = MAX(Principal[REVERSA])

var RESULTADO = 
    SWITCH(TRUE(),
    AtrasoPREF = 1, DataPref & "  " & "ðŸŸ¡", //estÃ¡ em atraso
    DataPref = DataHoje && DataHoje < DataFabrica || (DataFabrica = DataPref && DataPref = DataHoje && DataHoje <= DataPref), DataPref & "  " & "ðŸ”µ", // preferred estÃ¡ em andamento
    DataPref < DataHoje && DataPref <> BLANK(), DataPref & "  " & "ðŸŸ¢", // preferred concluÃ­da
    DataPref > DataHoje, DataPref & "  " & "âšª",
    ISBLANK(DataPref), "-"
    )
    return RESULTADO
    
-------------------------------------------------------------------------

FABRICA = 
var DataHoje = TODAY()
var DataPref = MAX('Principal'[PREFERRED])
var DataFabrica = MAX('Principal'[FABRICA])
var DataReversa = MAX('Principal'[REVERSA])
var AtrasoFabrica = MAX('Principal'[ATRASO_FABRICA])
var AprovadoCertificado = MAX('Principal'[APROVADO_CERTIFICADO])

var RESULTADO = 
    SWITCH(TRUE(),

    AtrasoFabrica = 1, DataFabrica & "  " & "ðŸŸ¡", //estÃ¡ em atraso
    DataFabrica = DataHoje && DataHoje < DataReversa || (DataFabrica = DataPref && DataFabrica = DataHoje && DataHoje <= DataReversa), DataFabrica & "  " & "ðŸ”µ", // preferred estÃ¡ em andamento
    DataFabrica < DataHoje && DataFabrica <> BLANK(), DataFabrica & "  " & "ðŸŸ¢", // jÃ¡ passou pela fÃ¡brica
    ISBLANK(DataFabrica), "-", //se nÃ£o for preeenchido ou o certificado for reprovado
    DataFabrica > DataHoje, DataFabrica & "  " & "âšª"
    )
    return RESULTADO

-------------------------------------------------------------------------

REVERSA = 
var DataHoje = TODAY()
var DataReversa = MAX(Principal[REVERSA])
var DataFabrica = MAX('Principal'[FABRICA])
var DataInicioScript = MAX('Principal'[INICIO_SCRIPTS_MASSIFICACAO])
var AtrasoReversa = MAX(Principal[ATRASO_REVERSA])

var RESULTADO = 
    SWITCH(TRUE(),
    AtrasoReversa = 1, DataReversa & "  " & "ðŸŸ¡", //estÃ¡ em atraso
    DataReversa = DataHoje && DataHoje < DATE(YEAR(DataReversa),MONTH(DataReversa),DAY(DataReversa)+10) || (DataFabrica = DataReversa && DataReversa = DataHoje && DataHoje <= DataInicioScript), DataReversa & "  " & "ðŸ”µ",// Reversa estÃ¡ em andamento
    DataReversa < DataHoje && DataReversa <> BLANK(), DataReversa & "  " & "ðŸŸ¢", // jÃ¡ passou pela reversa
    DataReversa > DataHoje, DataReversa & "  " & "âšª", 
    ISBLANK(DataReversa), "-"
    )
    return RESULTADO

-------------------------------------------------------------------------

INICIO_SCRIPT = 
var DataInicioScript = MAX('Principal'[INICIO_SCRIPTS_MASSIFICACAO])
var RESULTADO =
    SWITCH(TRUE(),
        ISBLANK(DataInicioScript), "-", //se nÃ£o for preenchido
        DataInicioScript //caso contrÃ¡rio, mostrar a data
    )
    return RESULTADO

-------------------------------------------------------------------------

TERMINO_SCRIPT = 
var DataHoje = TODAY()
var DataReversa = MAX(Principal[REVERSA])
var DataScript = MAX('Principal'[INICIO_SCRIPTS_MASSIFICACAO])
var AtrasoScript = MAX(Principal[ATRASO_MASSIFCACAO])
var DataTerminoScript = MAX(Principal[TERMINO_SCRIPTS_MASSIFICACAO])
var AprovadoCertificado = MAX('Principal'[APROVADO_CERTIFICADO])

var RESULTADO = 
    SWITCH(TRUE(),

    AtrasoScript = 1, DataScript & "  " & "ðŸŸ¡", //estÃ¡ em atraso
    DataHoje >= DataTerminoScript && DataTerminoScript <> BLANK(), DataScript & "  " & "ðŸŸ¢", //scripts concluÃ­dos
    ISBLANK(DataScript), "-", //se scripts nÃ£o for preenchido
    DataScript > DataHoje, DataScript & "  " & "âšª", //Ã© uma data futura
    DataScript <= DataHoje && DataHoje < DataTerminoScript, DataScript & "  " & "ðŸ”µ", //estÃ¡ em andamento
    isblank(DataScript), "-" //se script nÃ£o for preenchido

    )
    return RESULTADO

-------------------------------------------------------------------------
